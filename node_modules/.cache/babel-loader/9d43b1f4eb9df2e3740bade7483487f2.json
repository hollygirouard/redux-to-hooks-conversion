{"ast":null,"code":"import _classCallCheck from \"/Users/hollywhite/Desktop/Freelance/Tutorials/modern-react-app-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport auth0 from 'auth0-js';\nimport history from './history';\n\nvar Auth = function Auth() {\n  var _this = this;\n\n  _classCallCheck(this, Auth);\n\n  this.auth0 = new auth0.WebAuth({\n    domain: 'webapp1.auth0.com',\n    clientID: 'uZxUdMAsiDWeu3OrNpoi4JwJscdF5nAx',\n    redirectUri: 'http://localhost:3000/callback',\n    responseType: 'token id_token',\n    scope: 'openid profile email'\n  });\n  this.userProfile = {};\n\n  this.login = function () {\n    _this.auth0.authorize();\n  };\n\n  this.handleAuth = function () {\n    _this.auth0.parseHash(function (err, authResult) {\n      if (authResult) {\n        localStorage.setItem('access_token', authResult.accessToken);\n        localStorage.setItem('id_token', authResult.idToken);\n        var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n        localStorage.setItem('expiresAt', expiresAt);\n\n        _this.getProfile();\n\n        setTimeout(function () {\n          history.replace('/authcheck');\n        }, 2000);\n      } else {\n        console.log(err);\n      }\n    });\n  };\n\n  this.getAccessToken = function () {\n    if (localStorage.getItem('access_token')) {\n      var accessToken = localStorage.getItem('access_token');\n      return accessToken;\n    } else {\n      return null;\n    }\n  };\n\n  this.getProfile = function () {\n    var accessToken = _this.getAccessToken();\n\n    if (accessToken) {\n      _this.auth0.client.userInfo(accessToken, function (err, profile) {\n        if (profile) {\n          _this.userProfile = {\n            profile: profile\n          };\n        }\n      });\n    }\n  };\n\n  this.logout = function () {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expiresAt');\n    setTimeout(function () {\n      history.replace('/authcheck');\n    }, 200);\n  };\n\n  this.isAuthenticated = function () {\n    var expiresAt = JSON.parse(localStorage.getItem('expiresAt'));\n    return new Date().getTime() < expiresAt;\n  };\n};\n\nexport { Auth as default };","map":{"version":3,"sources":["/Users/hollywhite/Desktop/Freelance/Tutorials/modern-react-app-sample/src/utils/auth.js"],"names":["auth0","history","Auth","WebAuth","domain","clientID","redirectUri","responseType","scope","userProfile","login","authorize","handleAuth","parseHash","err","authResult","localStorage","setItem","accessToken","idToken","expiresAt","JSON","stringify","expiresIn","Date","getTime","getProfile","setTimeout","replace","console","log","getAccessToken","getItem","client","userInfo","profile","logout","removeItem","isAuthenticated","parse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEqBC,I;;;;;OACnBF,K,GAAQ,IAAIA,KAAK,CAACG,OAAV,CAAkB;AACxBC,IAAAA,MAAM,EAAE,mBADgB;AAExBC,IAAAA,QAAQ,EAAE,kCAFc;AAGxBC,IAAAA,WAAW,EAAE,gCAHW;AAIxBC,IAAAA,YAAY,EAAE,gBAJU;AAKxBC,IAAAA,KAAK,EAAE;AALiB,GAAlB,C;OAQRC,W,GAAc,E;;OAEdC,K,GAAQ,YAAM;AACV,IAAA,KAAI,CAACV,KAAL,CAAWW,SAAX;AACH,G;;OAEDC,U,GAAa,YAAM;AACjB,IAAA,KAAI,CAACZ,KAAL,CAAWa,SAAX,CAAqB,UAACC,GAAD,EAAMC,UAAN,EAAqB;AACxC,UAAGA,UAAH,EAAe;AACbC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,UAAU,CAACG,WAAhD;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,UAAU,CAACI,OAA5C;AAEA,YAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAgBP,UAAU,CAACQ,SAAX,GAAuB,IAAvB,GAA8B,IAAIC,IAAJ,GAAWC,OAAX,EAA9C,CAAhB;AACAT,QAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCG,SAAlC;;AAEA,QAAA,KAAI,CAACM,UAAL;;AACAC,QAAAA,UAAU,CAAC,YAAM;AAAE1B,UAAAA,OAAO,CAAC2B,OAAR,CAAgB,YAAhB;AAA+B,SAAxC,EAA0C,IAA1C,CAAV;AACD,OATD,MASO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ;AACD;AACF,KAbD;AAcD,G;;OAEDiB,c,GAAiB,YAAM;AACrB,QAAGf,YAAY,CAACgB,OAAb,CAAqB,cAArB,CAAH,EAAyC;AACvC,UAAMd,WAAW,GAAGF,YAAY,CAACgB,OAAb,CAAqB,cAArB,CAApB;AACA,aAAOd,WAAP;AACD,KAHD,MAGO;AACL,aAAO,IAAP;AACD;AACF,G;;OAGDQ,U,GAAa,YAAM;AACjB,QAAIR,WAAW,GAAG,KAAI,CAACa,cAAL,EAAlB;;AACA,QAAGb,WAAH,EAAgB;AACd,MAAA,KAAI,CAAClB,KAAL,CAAWiC,MAAX,CAAkBC,QAAlB,CAA2BhB,WAA3B,EAAwC,UAACJ,GAAD,EAAMqB,OAAN,EAAkB;AACtD,YAAGA,OAAH,EAAY;AACV,UAAA,KAAI,CAAC1B,WAAL,GAAmB;AAAE0B,YAAAA,OAAO,EAAPA;AAAF,WAAnB;AACD;AACJ,OAJD;AAKD;AACF,G;;OAGDC,M,GAAS,YAAM;AACbpB,IAAAA,YAAY,CAACqB,UAAb,CAAwB,cAAxB;AACArB,IAAAA,YAAY,CAACqB,UAAb,CAAwB,UAAxB;AACArB,IAAAA,YAAY,CAACqB,UAAb,CAAwB,WAAxB;AACAV,IAAAA,UAAU,CAAC,YAAM;AAAE1B,MAAAA,OAAO,CAAC2B,OAAR,CAAgB,YAAhB;AAA+B,KAAxC,EAA0C,GAA1C,CAAV;AACD,G;;OAEDU,e,GAAkB,YAAM;AACtB,QAAIlB,SAAS,GAAGC,IAAI,CAACkB,KAAL,CAAWvB,YAAY,CAACgB,OAAb,CAAqB,WAArB,CAAX,CAAhB;AACA,WAAO,IAAIR,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACD,G;;;SAhEkBlB,I","sourcesContent":["import auth0 from 'auth0-js'\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n  auth0 = new auth0.WebAuth({\r\n    domain: 'webapp1.auth0.com',\r\n    clientID: 'uZxUdMAsiDWeu3OrNpoi4JwJscdF5nAx',\r\n    redirectUri: 'http://localhost:3000/callback',\r\n    responseType: 'token id_token',\r\n    scope: 'openid profile email'\r\n  })\r\n\r\n  userProfile = {}\r\n\r\n  login = () => {\r\n      this.auth0.authorize()\r\n  }\r\n\r\n  handleAuth = () => {\r\n    this.auth0.parseHash((err, authResult) => {\r\n      if(authResult) {\r\n        localStorage.setItem('access_token', authResult.accessToken)\r\n        localStorage.setItem('id_token', authResult.idToken)\r\n\r\n        let expiresAt = JSON.stringify((authResult.expiresIn * 1000 + new Date().getTime()))\r\n        localStorage.setItem('expiresAt', expiresAt)\r\n\r\n        this.getProfile();\r\n        setTimeout(() => { history.replace('/authcheck') }, 2000);\r\n      } else {\r\n        console.log(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  getAccessToken = () => {\r\n    if(localStorage.getItem('access_token')) {\r\n      const accessToken = localStorage.getItem('access_token')\r\n      return accessToken\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n\r\n  getProfile = () => {\r\n    let accessToken = this.getAccessToken()\r\n    if(accessToken) {\r\n      this.auth0.client.userInfo(accessToken, (err, profile) => {\r\n          if(profile) {\r\n            this.userProfile = { profile }\r\n          }\r\n      } )\r\n    }\r\n  }\r\n\r\n\r\n  logout = () => {\r\n    localStorage.removeItem('access_token')\r\n    localStorage.removeItem('id_token')\r\n    localStorage.removeItem('expiresAt')\r\n    setTimeout(() => { history.replace('/authcheck') }, 200);\r\n  }\r\n\r\n  isAuthenticated = () => {\r\n    let expiresAt = JSON.parse(localStorage.getItem('expiresAt'))\r\n    return new Date().getTime() < expiresAt\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}